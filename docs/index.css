@import url('https://rsms.me/inter/inter-ui.css');

:root {
  /* == viewport-fitting size ==
  --emsAcrossViewport: 90;
  --fontSize: calc(100vw / var(--emsAcrossViewport));
  --lineHeight: calc(var(--fontSize) * 1.3);
  */
  /* == fixed, constant size == */
  --fontSize: 14px;
  --lineHeight: calc(var(--fontSize) * 1.308);

  /* [small screens] */
  --fontSizeSmallScreen: 16px;

  /* [large screens] total number of EMs across width of page */
  /* This number is specific to fontSize; they transition between */
  --fontSizeNEMsLargeScreen: 102.8;

  /* [print] total number of EMs across width of page */
  --fontSizeNEMsPrint: 100;

  

  --spacing: 2rem;
  --spacingv: calc(var(--lineHeight) / 2);
  --spacingSmallScreen: 1rem;

  --gridGapCol: var(--spacing);
  --gridGapRow: calc(var(--spacing) / 2);

  --codeBGColor: #EDF3F5;
}

/* ------------------------------------------------------------------------- */
/* RESET */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: inherit;
  font: inherit;
  vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
  display: block;
}
body {
  line-height: inherit;
}
ol, ul {
  list-style: none;
}
blockquote, q {
  quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
/* END RESET */
/* ------------------------------------------------------------------------- */

html {
  font-family: 'Inter UI', -system-ui, system-ui, sans-serif;
  font-size: var(--fontSize);
  line-height: var(--lineHeight);
  background: white;
  color: black;

  /* This is an approximation of Inter UI Dynamic Metrics tracking
     which formula is as follows:
       tracking_percent = a + b * e ^ (c * fontSize)
       where a = -0.017, b = 0.202, c = -0.175
     The formula for the approximation, centered around 14px font size, is:
       tracking_px = 0.5 + fontSize * -0.03575
     This approximation degrades significantly outside the range 8pxâ€“30px.
  */
  letter-spacing: calc(0.5px + calc(var(--fontSize) * -0.03575));
}

@supports (font-variation-settings: normal) {
  html { font-family: 'Inter UI var alt', -system-ui, system-ui, sans-serif; }
}

body {
  /*overflow-x: hidden;*/
}
body.full-bleed {
  margin: 0;
}

b, strong, .bold { font-weight: 600; }
i, em, .italic { font-style: italic; }

/* line-height + margin-bottom must add up to even multiple of spacingv */

h1 {
  font-weight: 700; font-size: 4rem; letter-spacing: -0.035em;
  line-height: calc(var(--lineHeight) * 3);
  margin-bottom: calc(var(--spacingv) * 2);
  margin-left: -0.2rem;
}
h2 {
  font-weight: 700; font-size: 2rem; letter-spacing: -0.02em;
  line-height: calc(var(--lineHeight) * 2);
  margin-bottom: calc(var(--spacingv) * 2);
  margin-left: -0.07rem;
}
h3, h4, h5, h6 { font-weight: 600; }
p + h1, pre + h1 { margin-top: calc(var(--spacingv) * 6); }
p + h2, pre + h2 { margin-top: calc(var(--spacingv) * 4); }
p + h3, pre + h3 { margin-top: calc(var(--spacingv) * 4); }
h3 + p, h3 + pre { margin-top: calc(var(--spacingv) * 2); }

p, pre, blockquote {
  /* margin must be an even 50% of line height (e.g. 50%, 100%, 150%, etc.) */
  /*margin-bottom: calc(var(--lineHeight) / 2);*/
  /*margin-bottom: var(--lineHeight);*/
  margin-bottom: calc(var(--spacingv) * 2);
  break-inside: avoid;
}

tt, code, pre {
  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Hack, monospace;
}
tt, code {
  background: var(--codeBGColor);
  padding: 0.1rem 0.2rem;
  border-radius: 0.2rem;
}
pre {
  background: var(--codeBGColor);
  padding: var(--spacingv);
}
pre > code {
  background: none;
}

grid > * > img {
  /* lone image directly inside grid cell */
  display: block;
  width: 100%;
  margin-bottom: calc(var(--spacingv) * 2);
}

/* ------------------------------------------------------------------------- */
/* HELPERS */

cols {
  display: block;
  columns: 2;
  column-gap: var(--spacing);
}

.error, .template-error { color: #a58; }
.avoid-break { break-inside: avoid; }
.capitalize { text-transform: capitalize; }
.uppercase { text-transform: uppercase; }


/* ------------------------------------------------------------------------- */
/* GRID */

grid {
  display: grid;
  min-height: 10%;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: auto;
  grid-column-gap: var(--gridGapCol);
  grid-row-gap: var(--gridGapRow);
}
grid > * {
  margin: 0;
}

grid > hr {
  border: none;
  margin: auto 0 0 0; /* align bottom */
  grid-column: 1 / span 8;
  border-bottom: calc(var(--fontSize) * 0.18) solid black;
  transform-origin: 0 0;
  transform: scale3d(1, 0.5, 1);
  /*box-shadow: 0 calc(var(--fontSize) * 0.18) 0px 0px black;*/
  height: 1px;
  margin-top: calc(var(--gridGapRow) - 1px);
}

/* .debug can be added to a grid to visualize its effective cells.
   .debug-color applies alternating colors. */
grid.debug > *, grid.debug-color > * {
  --color: rgba(250, 230, 0, 0.2);
  background-image: linear-gradient(to bottom, var(--color) 0%, var(--color) 100%);
}
grid.debug-color > :nth-child(4n+2) { --color: rgba(250, 0, 0, 0.1); }
grid.debug-color > :nth-child(4n+3) { --color: rgba(40, 120, 255, 0.1); }
grid.debug-color > :nth-child(4n+4) { --color: rgba(0, 230, 80, 0.17); }
                           /* .col-N-all by default */
.row-1   { grid-row: 1 / 1; grid-column: 1 / span 8; }
.row-2   { grid-row: 2 / 2; grid-column: 1 / span 8; }
.row-3   { grid-row: 3 / 3; grid-column: 1 / span 8; }
.row-4   { grid-row: 4 / 4; grid-column: 1 / span 8; }
.row-5   { grid-row: 5 / 5; grid-column: 1 / span 8; }
.row-6   { grid-row: 6 / 6; grid-column: 1 / span 8; }
.row-7   { grid-row: 7 / 7; grid-column: 1 / span 8; }
.row-8   { grid-row: 8 / 8; grid-column: 1 / span 8; }

.col-all { grid-column: 1 / span 8; }

.col-1   { grid-column: 1 / span 1; }
.col-1-2 { grid-column: 1 / span 2; }
.col-1-3 { grid-column: 1 / span 3; }
.col-1-4 { grid-column: 1 / span 4; }
.col-1-5 { grid-column: 1 / span 5; }
.col-1-6 { grid-column: 1 / span 6; }
.col-1-7 { grid-column: 1 / span 7; }
.col-1-8 { grid-column: 1 / span 8; }

.col-2   { grid-column: 2 / span 1; }
.col-2-2 { grid-column: 2 / span 2; }
.col-2-3 { grid-column: 2 / span 3; }
.col-2-4 { grid-column: 2 / span 4; }
.col-2-5 { grid-column: 2 / span 5; }
.col-2-6 { grid-column: 2 / span 6; }
.col-2-7 { grid-column: 2 / span 7; }

.col-3   { grid-column: 3 / span 1; }
.col-3-2 { grid-column: 3 / span 2; }
.col-3-3 { grid-column: 3 / span 3; }
.col-3-4 { grid-column: 3 / span 4; }
.col-3-5 { grid-column: 3 / span 5; }
.col-3-6 { grid-column: 3 / span 6; }

.col-4   { grid-column: 4 / span 1; }
.col-4-2 { grid-column: 4 / span 2; }
.col-4-3 { grid-column: 4 / span 3; }
.col-4-4 { grid-column: 4 / span 4; }
.col-4-5 { grid-column: 4 / span 5; }

.col-5   { grid-column: 5 / span 1; }
.col-5-2 { grid-column: 5 / span 2; }
.col-5-3 { grid-column: 5 / span 3; }
.col-5-4 { grid-column: 5 / span 4; }

.col-6   { grid-column: 6 / span 1; }
.col-6-2 { grid-column: 6 / span 2; }
.col-6-3 { grid-column: 6 / span 3; }

.col-7   { grid-column: 7 / span 1; }
.col-7-2 { grid-column: 7 / span 2; }

.col-8   { grid-column: 8 / span 1; }

grid > .flow-cols {
  /* Automatically flow content into columns that fit the 8-grid */
  column-width: calc(25vw - calc(var(--spacing) * 3.8));
  column-count: auto;
  column-gap: var(--spacing);
}

/* ------------------------------------------------------------------------- */
/* SMALL SCREENS */

@media only screen and (max-width: 900px) {
  :root {
    --fontSize: 11px;
  }
}

@media only screen and (max-width: 500px) {
  :root {
    /*--emsAcrossViewport: 25;*/
    --fontSize: var(--fontSizeSmallScreen);
    --spacing: var(--spacingSmallScreen);
  }
  body {
    padding-top: calc(var(--spacingv) * 2);
    padding-bottom: calc(var(--spacingv) * 2);
  }
  cols {
    columns: 1;
    columns: initial;
  }
  grid {
    display: flex;
    flex-direction: column;
    /*flex-wrap: wrap;*/
  }
  grid > * {
    flex: 1 1 auto;
    max-width: 100%;
    /*margin: var(--spacingv) var(--spacing);*/ /* moved from parent */
  }
  grid > * grid > * {
    margin-left: 0;
    margin-right: 0;
  }
  /*grid > .col-all { max-width:100%; flex: 1 0 auto; }*/
  grid > hr {
    max-width: 100%;
    max-height: 1px;
    flex: 1 0 100%;
    margin-top: var(--gridGapRow);
    margin-bottom: 0;
  }
  grid > hr + hr {
    /* reduce HRs placed over neighboring columns to just one HR */
    display: none;
  }
  grid .subsection {
    border-top: 1px solid black;
    padding-top: calc(var(--spacingv) * 2);
  }
  grid hr + .subsection {
    border-top: none;
  }
  grid > .col-1-2,
  grid > .col-3-2,
  grid > .col-5-2,
  grid > .col-7-2 {
    min-width: 50%;
  }
  grid > .flow-cols {
    columns: 1;
  }
}

@media only screen and (max-device-width: 812px) and (orientation: landscape) {
  /* Devices <= iPhone X, in landscape orientation */
  :root {
    --fontSize: 1vw;
  }
}

/* ------------------------------------------------------------------------- */
/* PRINT MEDIA AND LARGE SCREENS */

@media print {
  :root {
    /* total of 100em across width of page */
    --fontSize: calc(100vw / var(--fontSizeNEMsPrint));
  }
}
@media only screen and (min-width: 1441px) {
  :root {
    /* total of 110em across width of page */
    --fontSize: calc(100vw / var(--fontSizeNEMsLargeScreen));
  }
}

